name: deploy-blog-fe-mt
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build & package
        run: |
          npm run build
          # crea un unico archive in root
          tar -czvf package.tar.gz dist

      - name: Debug inspect archive
        run: |
          echo "→ Contenuto di package.tar.gz:"
          tar -tzf package.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: package.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AWS_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ vars.AWS_HOST }}

      - name: Set up SSH
        run: ssh-keyscan ${{ vars.AWS_HOST }} >> ~/.ssh/known_hosts

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: .

      - name: Debug verify local artifact
        run: |
          echo "→ File scaricato:"
          ls -lh package.tar.gz
          echo "→ Anteprima contenuto:"
          tar -tzf package.tar.gz | head -n 10

      - name: Deploy to server
        run: |
          scp package.tar.gz ${{ secrets.AWS_USER }}@${{ vars.AWS_HOST }}:/usr/local/repos/blog-fe-mt/package.tar.gz

      - name: Extract & deploy on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_USER }}@${{ vars.AWS_HOST }} \
            "bash /usr/local/repos/blog-fe-mt/deploy/deploy.sh main"

